// Generated by data binding compiler. Do not edit!
package org.study.kotlin.androidarchitecturestudy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import org.study.kotlin.androidarchitecturestudy.R;
import org.study.kotlin.androidarchitecturestudy.api.model.TickerModel;

public abstract class ItemTickerBinding extends ViewDataBinding {
  @NonNull
  public final TextView textviewItemAccTradePrice24h;

  @NonNull
  public final TextView textviewItemChangeRate;

  @NonNull
  public final TextView textviewItemMarket;

  @NonNull
  public final TextView textviewItemTradePrice;

  @Bindable
  protected TickerModel mVm;

  protected ItemTickerBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView textviewItemAccTradePrice24h, TextView textviewItemChangeRate,
      TextView textviewItemMarket, TextView textviewItemTradePrice) {
    super(_bindingComponent, _root, _localFieldCount);
    this.textviewItemAccTradePrice24h = textviewItemAccTradePrice24h;
    this.textviewItemChangeRate = textviewItemChangeRate;
    this.textviewItemMarket = textviewItemMarket;
    this.textviewItemTradePrice = textviewItemTradePrice;
  }

  public abstract void setVm(@Nullable TickerModel vm);

  @Nullable
  public TickerModel getVm() {
    return mVm;
  }

  @NonNull
  public static ItemTickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_ticker, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemTickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemTickerBinding>inflateInternal(inflater, R.layout.item_ticker, root, attachToRoot, component);
  }

  @NonNull
  public static ItemTickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_ticker, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemTickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemTickerBinding>inflateInternal(inflater, R.layout.item_ticker, null, false, component);
  }

  public static ItemTickerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemTickerBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemTickerBinding)bind(component, view, R.layout.item_ticker);
  }
}
